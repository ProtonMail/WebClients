.notifications-container {
	position: fixed;
	inset-block-end: em(24);
	inset-inline-start: 50%;
	z-index: $layer-notifications;
	transform: translateX(-50%);
	transition: all 1s ease;

	@at-root {
		[dir='rtl'] & {
			transform: translateX(50%);
		}
	}
}

.notification {
	position: fixed;
	display: flex;
	inset-block-end: var(--top-custom);
	align-items: center;
	overflow: hidden;
	border-radius: var(--border-radius-lg);
	box-shadow: var(--shadow-lifted);
	background-color: var(--background-invert);
	color: var(--text-invert);
	inline-size: max-content;
	max-inline-size: max(400px, calc(100% - 2em));
	padding-block: em(8);
	padding-inline: em(12);
	transform: translateX(-50%);
	transition: inset-block-end 0.3s ease;

	@at-root {
		[dir='rtl'] & {
			transform: translateX(50%);
		}
	}

	.button {
		--button-default-text-color: inherit;
		--button-hover-text-color: inherit;
		--button-active-text-color: inherit;

		margin-block: em(-6);
	}

	.link {
		color: inherit;
	}

	&__icon {
		margin-inline: em(-3) em(8);
	}

	&__content {
		display: flex;
		align-items: center;

		&:last-child:not(:only-child) {
			margin-inline-end: em(-2);
		}

		&:last-child:nth-child(2):has(.button) {
			margin-inline-end: em(0);
		}

		&:not(:only-child),
		&:has(:not(.button):last-child) {
			margin-inline-end: em(6);
		}

		.button {
			white-space: nowrap;
			align-self: center;

			&:last-child {
				margin-inline-start: em(8);
				margin-inline-end: em(-8);
			}

			&:nth-last-child(2),
			&:has(+ .circle-loader) {
				margin-inline-start: em(8);
			}
		}

		// spacing between two buttons
		.button + .button {
			margin-inline-start: em(2);
		}

		.circle-loader {
			// make sure the loader is the last child
			// 2nd to last because it automatically adds a "loading" text for screen readers

			&:nth-last-child(2) {
				margin-inline-start: em(8);
				margin-inline-end: em(-8);
			}
		}
	}

	&__close-button {
		flex-shrink: 0;
		margin-inline-end: em(-8);
		margin-inline-start: em(2);
	}

	&--in {
		animation-duration: 0.3s;
		animation-delay: 0.3s;
		animation-fill-mode: both;
		animation-timing-function: ease;
		animation-name: anime-notification-in;
	}

	&--out {
		animation-duration: 0.3s;
		animation-fill-mode: both;
		animation-timing-function: ease;
		animation-name: anime-notification-out;
	}

	&--error,
	&--warning {
		background-color: var(--signal-danger);
		color: var(--signal-danger-contrast);
	}
}

@keyframes anime-notification-in {
	0% {
		opacity: 0;
		transform: translateY(50%);
	}

	100% {
		opacity: 1;
		transform: translateY(0);
	}
}

@keyframes anime-notification-out {
	0% {
		opacity: 1;
		transform: translateY(0);
	}

	100% {
		opacity: 0;
		transform: translateY(-50%);
	}
}

.global-loader {
	z-index: $layer-notifications;
}
