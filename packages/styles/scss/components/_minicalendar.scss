.minicalendar {
	// Size of each cell width and height when `fixedSize`property is set.
	--fixed-cell-size: #{em(34)};

	min-inline-size: rem(150);
	max-inline-size: rem(400);
	font-size: rem(12);

	&-grid,
	&-weeknumbers,
	&-weekdays,
	&-monthdays {
		display: grid;
	}

	&-weeknumbers,
	&-weekdays,
	&-monthdays {
		grid-gap: 1px 0;
		user-select: none;

		& > * {
			display: flex;
			justify-content: center;
			align-items: stretch;
			inline-size: var(--cell-width, auto);

			// Chrome since v94 has a jiggling bug provoked by a cascade of minicalendar re-sizings at
			// the threshold for the scrollbar to appear in the sidebar.
			// We use a rather edgy browser check to avoid using aspect-ratio in Chrome because of this bug
			@supports (aspect-ratio: 1 / 1) and (-moz-appearance: none) {
				aspect-ratio: 1 / 1;
			}

			@supports (not (aspect-ratio: 1 / 1)) or (not (-moz-appearance: none)) {
				block-size: var(--cell-height, initial);
			}
		}
	}

	&-grid {
		grid-gap: 1px;

		&:not(.with-weeknumbers) {
			grid-template-columns: 7fr; // It could be 1fr, but wellâ€¦ just for you to understand ^^
			grid-template-rows: auto;
			/* stylelint-disable-next-line declaration-block-no-redundant-longhand-properties */
			grid-template-areas:
				'weekdays'
				'monthdays';
		}

		&.with-weeknumbers {
			grid-template-columns: 1fr 1px 7fr;
			grid-template-rows: auto;
			/* stylelint-disable-next-line declaration-block-no-redundant-longhand-properties */
			grid-template-areas:
				'weeknumbers rule weekdays'
				'weeknumbers rule monthdays';
		}

		&.is-fixed-size {
			--cell-width: var(--fixed-cell-size);
		}

		// Chrome since v94 has a jiggling bug provoked by a cascade of minicalendar re-sizings at
		// the threshold for the scrollbar to appear in the sidebar.
		// We use a rather edgy browser check to avoid using aspect-ratio in Chrome because of this bug
		@supports (not (aspect-ratio: 1 / 1)) or (not (-moz-appearance: none)) {
			// Ensure the aspect ratio while waiting for aspect-ratio property
			--cell-height: var(--computed-cell-width, var(--fixed-cell-size));
		}
	}

	&-weeknumbers {
		grid-area: weeknumbers;
		grid-template-columns: 1fr;
		grid-template-rows: repeat(var(--week-count, 4), 1fr);
	}

	// Use a vertical rule instead of a border the use the grid gaps for spacing
	&-vr {
		grid-area: rule;
	}

	&-weekdays {
		grid-area: weekdays;
		grid-template-columns: repeat(var(--weekdays-count, 7), 1fr);
		grid-template-rows: auto;
		color: var(--text-weak);

		& > * {
			// No buttons for weekdays, so no need to stretch
			align-items: center;
		}

		.current-weekday {
			color: var(--mini-calendar-today-color);
		}
	}

	&-monthdays {
		grid-area: monthdays;
		grid-template-columns: repeat(var(--cols, 7), 1fr);
		grid-template-rows: repeat(var(--rows, 4), 1fr);
	}

	&-weeknumber,
	&-day {
		@extend .interactive-pseudo;

		position: relative;
		inline-size: 100%;
		border-radius: var(--border-radius-sm);

		&[aria-pressed='true'] {
			background: var(--interaction-weak);
			color: var(--text-norm);

			&:hover {
				background: var(--interaction-weak-hover);
			}

			&:active {
				background: var(--interaction-weak-active);
			}
		}
	}

	&-day {
		// This is the 'selected' and 'current' marker, placed below the number by z-index
		&::before {
			content: '';
			position: absolute;
			inset: 0;
			z-index: 0;
			border-radius: var(--border-radius-sm);
			border: 1px solid transparent;
			pointer-events: none;
			transition: 0.15s easing(ease-out-quad);
		}

		&-number {
			position: relative;
			z-index: 1;
		}

		&--selected {
			&::before {
				background: var(--interaction-norm);
			}
		}

		&--selected:hover,
		&--selected:focus-visible {
			&::before {
				background: var(--interaction-norm-hover);
			}
		}

		&--selected:active {
			&::before {
				background: var(--interaction-norm-active);
			}
		}

		&--selected &-number {
			font-weight: var(--font-weight-bold);
			color: var(--interaction-norm-contrast);
		}

		&[aria-current='date'] {
			font-weight: var(--font-weight-bold);
			color: var(--mini-calendar-today-color);

			&::before,
			&::after {
				border-color: var(--mini-calendar-today-color);
			}
		}

		&--out-of-month {
			color: var(--text-weak);

			// Separate style of days out of month from the other ones when part of a range
			&[aria-pressed='true'] {
				background: var(--background-weak);
				color: var(--text-weak);
			}
		}

		&--range:not(#{&}--range-bound-start) {
			border-start-start-radius: 0;
			border-end-start-radius: 0;
		}

		&--range:not(#{&}--range-bound-end) {
			border-start-end-radius: 0;
			border-end-end-radius: 0;
		}
	}
}
