@use 'sass:math';

.spotlight {
	$arrow-width: 1em;

	position: fixed;
	z-index: $layer-tooltips;
	min-inline-size: 10em;
	max-inline-size: 20em;
	transform: scale(1);
	border-radius: var(--border-radius-md);
	background-color: var(--background-norm);
	box-shadow: var(--shadow-lifted);
	border: 1px solid var(--border-norm);
	text-align: start;
	word-break: break-word;
	animation: 0.15s ease-out both anime-spotlight-in;

	@keyframes anime-spotlight-in {
		from {
			transform: scale(0.75);
			opacity: 0;
		}

		to {
			transform: scale(1);
			opacity: 1;
		}
	}

	// Out animation
	&.is-spotlight-out {
		animation-name: anime-spotlight-out;

		@keyframes anime-spotlight-out {
			from {
				transform: scale(1);
				opacity: 1;
			}

			to {
				transform: scale(0.75);
				opacity: 0;
			}
		}
	}

	@include transform-origins;

	&-inner {
		position: relative;
		z-index: 1;
		padding-block: 1em;
		padding-inline: 1.5em 3em;
		border-radius: var(--border-radius-md);
		color: var(--text-norm);
		background-color: var(--background-norm);
	}

	// Pseudo-elements to make arrows
	&::before {
		content: '';
		position: absolute;
		z-index: 0;
		inline-size: $arrow-width;
		block-size: $arrow-width;
		transform: rotate(45deg);
		border: inherit;
		background-color: var(--background-norm);
		pointer-events: none;
		speak: none;
	}

	&--top,
	&--top-start,
	&--top-end {
		&::before {
			inset-block-end: -#{math.div($arrow-width, 2)};
		}
	}

	&--bottom,
	&--bottom-start,
	&--bottom-end {
		&::before {
			inset-block-start: -#{math.div($arrow-width, 2)};
		}
	}

	&--right,
	&--right-start,
	&--right-end {
		&::before {
			inset-inline-start: -#{math.div($arrow-width, 2)};
		}
	}

	&--left,
	&--left-start,
	&--left-end {
		&::before {
			inset-inline-end: -#{math.div($arrow-width, 2)};
		}
	}

	&--top,
	&--bottom {
		&::before {
			inset-inline-start: calc(50% - #{math.div($arrow-width, 2)});
		}
	}

	// the + 0.5px is just to avoid a glitch
	&--top-start,
	&--bottom-start {
		&::before {
			inset-inline-start: max(calc(var(--arrow-offset, 0) - #{math.div($arrow-width, 2)}) + 0.5px, 0px);
		}
	}

	&--top-end,
	&--bottom-end {
		&::before {
			inset-inline-end: max(calc(var(--arrow-offset, 0) - #{math.div($arrow-width, 2)}) + 0.5px, 0px);
		}
	}

	&--left,
	&--right {
		&::before {
			inset-block-start: calc(50% - #{math.div($arrow-width, 2)});
		}
	}

	&--left-start,
	&--right-start {
		&::before {
			inset-block-start: max(calc(var(--arrow-offset, 0) - #{math.div($arrow-width, 2)}), 0px);
		}
	}

	&--left-end,
	&--right-end {
		&::before {
			inset-block-end: max(calc(var(--arrow-offset, 0) - #{math.div($arrow-width, 2)}), 0px);
		}
	}

	&-close {
		position: absolute;
		inset-block-start: 0.5em;
		inset-inline-end: 0.5em;
		z-index: 1;
	}

	&--no-side-radius {
		// remove glitches caused by border-radiuses when arrow is in edges ^^
		&.spotlight {
			&--top,
			&--top-start,
			&--top-end {
				&::before {
					border-block-start: 0;
					border-inline-start: 0;
				}
			}

			&--bottom,
			&--bottom-start,
			&--bottom-end {
				&::before {
					border-block-end: 0;
					border-inline-end: 0;
				}
			}

			&--top-end,
			&--left-end {
				&,
				& .spotlight-inner {
					border-end-end-radius: 0;
				}
			}

			&--top-start,
			&--right-end {
				&,
				& .spotlight-inner {
					border-end-start-radius: 0;
				}
			}

			&--bottom-start,
			&--right-start {
				&,
				& .spotlight-inner {
					border-start-start-radius: 0;
				}
			}

			&--bottom-end,
			&--left-start {
				&,
				& .spotlight-inner {
					border-start-end-radius: 0;
				}
			}
		}
	}

	&--with-illustration {
		max-inline-size: 28em;
	}

	&--large {
		max-inline-size: 30em;
	}
}
