@use 'sass:math';

.button-group {
	display: inline-flex;
	flex-wrap: nowrap;
	align-items: stretch;
	border-radius: var(--border-radius-md);
	background-color: var(--background-norm);
	vertical-align: middle;

	&--no-bg-color {
		background-color: transparent;
	}

	&-item {
		&.is-selected {
			pointer-events: none;
		}
	}

	///
	/// Solid variant
	///

	&[class*='button-group-solid'] &-item {
		&:not(:first-child) {
			border-start-start-radius: 0;
			border-end-start-radius: 0;
		}

		&:not(:last-child) {
			border-start-end-radius: 0;
			border-end-end-radius: 0;
		}
	}

	&-small[class*='button-group-solid'] &-item {
		padding-inline: em(7);
	}

	&-medium[class*='button-group-solid'] &-item {
		padding-inline: em(12);
	}

	&-large[class*='button-group-solid'] &-item {
		padding-inline: em(17, 16);
	}

	///
	/// Ghost variant
	///

	&-small[class*='button-group-ghost'] .vr {
		margin-block: em(4);
		margin-inline: em(3);
	}

	&-small[class*='button-group-ghost'] &-item {
		padding-inline: em(5);
	}

	&-medium[class*='button-group-ghost'] .vr {
		margin-block: em(6);
		margin-inline: em(3);
	}

	&-medium[class*='button-group-ghost'] &-item {
		padding-inline: em(10);
	}

	&-large[class*='button-group-ghost'] .vr {
		margin-block: em(8);
		margin-inline: em(3);
	}

	&-large[class*='button-group-ghost'] &-item {
		padding-inline: em(15);
	}

	///
	/// Outline variant
	///

	// default
	&[class*='button-group-outline'] {
		border: 1px solid var(--button-group-border-color, transparent);

		.vr {
			margin-block: em(2);
		}
	}

	// default item
	&[class*='button-group-outline'] &-item {
		border-radius: var(--border-radius-sm);

		&[aria-expanded='true']:not([aria-controls]) {
			border-color: transparent;
		}

		&[disabled],
		&.is-disabled {
			&:not([aria-busy='true']) {
				background-color: var(--button-default-background-color, transparent);
			}
		}
	}

	// small
	&-small[class*='button-group-outline'] {
		padding: em(2);

		.vr {
			margin-inline: em(2);
		}
	}

	// small item
	&-small[class*='button-group-outline'] &-item {
		padding-block: 0;
		padding-inline: em(4);

		&.button-for-icon {
			padding: em(2);
		}
	}

	// medium
	&-medium[class*='button-group-outline'] {
		padding: em(3);

		.vr {
			margin-inline: em(3);
		}
	}

	// medium item
	&-medium[class*='button-group-outline'] &-item {
		padding-block: em(3);
		padding-inline: em(8);

		&.button-for-icon {
			padding: em(6);
		}
	}

	// large
	&-large[class*='button-group-outline'] {
		padding: em(4);

		.vr {
			margin-inline: em(4);
		}
	}

	// large item
	&-large[class*='button-group-outline'] &-item {
		padding-block: em(4, 16);
		padding-inline: em(12, 16);

		&.button-for-icon {
			padding: em(7, 16);
		}
	}
}

/*
 * Button group color variants
 */

@each $color in (norm, weak) {
	// Initialize namespace
	$group: 'interaction';

	.button-group-solid-#{$color},
	.button-group-outline-#{$color},
	.button-group-ghost-#{$color} {
		// For vertical rule
		--border-norm: var(--#{dash-join($group, $color, 'major-1')});
	}

	.button-group-solid-#{$color} {
		.button-group-item.is-selected:not([disabled], .is-disabled) {
			background-color: var(--#{dash-join($group, $color, 'major-2')});
		}
	}

	.button-group-outline-#{$color} {
		--button-group-border-color: var(--#{dash-join($group, $color, 'major-1')});

		@supports not selector(:focus-visible) {
			.button-group-item:not(:focus) {
				border-color: transparent;
			}
		}

		@supports selector(:focus-visible) {
			.button-group-item:not(:focus-visible) {
				border-color: transparent;
			}
		}
	}

	.button-group-outline-#{$color},
	.button-group-ghost-#{$color} {
		.button-group-item.is-selected:not([disabled], .is-disabled) {
			background-color: var(--#{dash-join($group, if($color == 'weak', 'norm', $color))});
			color: var(--#{dash-join($group, if($color == 'weak', 'norm', $color), 'contrast')});
		}
	}
}
