.dropdown {
	/*
		The border is set on the parent, but the max height is set on a child container.
		This breaks the available size computation because the parent element will be +2 pixels larger than the available max height.
		This causes an infinite loop in the floating ui library. To prevent that, border size is subtracted in a calc in the max height set in .dropdown-content.
	*/
	$border-size: 1;

	--custom-max-width: 20em;
	--custom-max-height: 30em;
	--min-width: 10em;
	--max-width: min(var(--custom-max-width, 100vw), 100vw);
	--max-height: min(var(--custom-max-height, 100vh), 100vh);

	position: fixed;
	z-index: $layer-modals;

	// NOTE: Don't use logical properties. RTL positioning is done in JS.
	/* stylelint-disable */
	top: var(--top);
	left: var(--left);
	/* stylelint-enable */
	transform: scale(1);
	border-radius: var(--border-radius-md);
	box-shadow: var(--shadow-lifted);
	border: #{$border-size}px solid var(--border-norm);
	background-color: var(--background-norm);
	color: var(--text-norm);
	animation: 0.15s easing(ease-out-cubic) both anime-dropdown-in-mouse;

	@keyframes anime-dropdown-in-mouse {
		from {
			transform: scale(0.75);
			opacity: 0;
		}

		to {
			transform: scale(1);
			opacity: 1;
		}
	}

	// Out animation
	&.is-dropdown-out {
		animation-name: anime-dropdown-out-mouse;

		@keyframes anime-dropdown-out-mouse {
			from {
				transform: scale(1);
				opacity: 1;
			}

			to {
				transform: scale(0.75);
				opacity: 0;
			}
		}
	}

	@include transform-origins;

	@include media('touch', '<=small') {
		&.adaptive-for-touch-screens {
			inset: 0;
			display: flex;
			padding-block: 15%;
			padding-inline: 25%;
			overflow: hidden;
			transform: none;
			flex-flow: column nowrap;
			justify-content: center;
			align-items: center;
			border-radius: initial;
			box-shadow: none;
			border: none;
			background-color: var(--backdrop-norm);
			animation-name: anime-dropdown-in-touch;

			@keyframes anime-dropdown-in-touch {
				from {
					opacity: 0;
				}

				to {
					opacity: 1;
				}
			}

			// Out animation
			&.is-dropdown-out {
				animation-name: anime-dropdown-out-touch;

				@keyframes anime-dropdown-out-touch {
					from {
						opacity: 1;
					}

					to {
						opacity: 0;
					}
				}
			}
		}
	}

	@include media('touch', '<=xsmall') {
		&.adaptive-for-touch-screens {
			padding-inline: 10%;
		}
	}

	/* Backdrop button, meant to override 'autoClose' option on mobile */
	&-backdrop {
		display: none;
	}

	@include media('touch', '<=small') {
		&.adaptive-for-touch-screens &-backdrop {
			position: absolute;
			inset: 0;
			z-index: 0;
			display: block;
			inline-size: 100%;
			block-size: 100%;
			margin: 0;
			padding: 0;
			border: none;
			outline: none;
			background: none;
		}
	}

	/* Scrollable frame inside the dropdown */
	&-content {
		inline-size: var(--width);
		block-size: var(--height);
		min-inline-size: min(var(--min-width, 1.5em), 100vw);
		min-block-size: min(var(--min-height, 1em), 100vh);
		max-inline-size: calc(min(var(--available-width, var(--max-width)), var(--max-width)) - #{$border-size * 2}px);
		max-block-size: calc(min(var(--available-height, var(--max-height)), var(--max-height)) - #{$border-size * 2}px);
		overflow: auto;
		border-radius: var(--border-radius-md);
		background-color: var(--background-norm);
		background-image: radial-gradient(farthest-side at 50% 0, var(--backdrop-norm), transparent),
			radial-gradient(farthest-side at 50% 100%, var(--backdrop-norm), transparent);
		background-position: 50% 0, 0 100%;
		background-size: calc(100% - #{rem(20)}) rem(3);
		background-repeat: no-repeat;

		&::before,
		&::after {
			content: '';
			position: relative;
			z-index: 1;
			display: block;
			block-size: rem(3);
			flex: 0 0 rem(3);
			background: var(--background-norm);
		}
	}

	@include media('touch', '<=small') {
		&.adaptive-for-touch-screens &-content {
			position: relative;
			z-index: 1;
			inline-size: 100%;
			max-inline-size: initial;
			max-block-size: initial;
			box-shadow: var(--shadow-lifted);
			transition: transform 0.1s ease-out;
			animation: anime-dropdown-content-scale-in 0.15s ease-out both;

			@keyframes anime-dropdown-content-scale-in {
				from {
					transform: scale(0.8);
				}

				to {
					transform: scale(1);
				}
			}
		}

		&.adaptive-for-touch-screens.is-dropdown-out &-content {
			animation-name: anime-dropdown-content-scale-out;

			@keyframes anime-dropdown-content-scale-out {
				from {
					transform: scale(1);
				}

				to {
					transform: scale(0.8);
				}
			}
		}
	}

	&-item {
		&-button,
		&-link {
			@extend .interactive-pseudo-inset;

			position: relative;

			&::after {
				z-index: 2;
			}

			&,
			&:hover,
			&:focus-visible,
			&:active {
				color: var(--text-norm);
				text-decoration: none;
			}
		}

		&--delete {
			&,
			&:hover,
			&:focus {
				.dropdown-item-button {
					color: var(--signal-danger);
				}
			}
		}

		& [aria-current='true'],
		& &--is-selected {
			// Specificity -_-v
			&,
			&:hover,
			&:focus,
			&:active {
				background-color: var(--interaction-norm);
				color: var(--interaction-norm-contrast);
				pointer-events: none;
			}

			@supports not selector(:focus-visible) {
				&:focus {
					z-index: 0;
					background-color: unset;

					&::after {
						background-color: var(--interaction-norm);
						box-shadow: 0 0 0 #{$focus-ring-size} var(--focus-ring);
						z-index: -1;
					}
				}
			}

			@supports selector(:focus-visible) {
				&:focus-visible {
					z-index: 0;
					background-color: unset;

					&::after {
						background-color: var(--interaction-norm);
						box-shadow: 0 0 0 #{$focus-ring-size} var(--focus-ring);
						z-index: -1;
					}
				}
			}
		}

		// Dropdown item container which contains several elements
		// Created for specific use case in the mail composer
		&-container {
			@extend .interactive;

			&,
			&:hover,
			&:focus-visible,
			&:active {
				color: var(--text-norm);
				text-decoration: none;
			}

			&.active {
				background-color: var(--interaction-default-hover);
			}

			&.dropdown-item--is-selected {
				&,
				&:hover,
				&:focus,
				&:active {
					pointer-events: all;
				}
			}

			.dropdown-item-button {
				background-color: transparent;

				&:hover,
				&:focus,
				&:active {
					background-color: transparent;
				}
			}
		}
	}

	&-item-hr {
		block-size: 0;
		box-sizing: content-box;
		border-block-start: 1px solid var(--border-norm);
	}

	&-search {
		position: sticky;
		inset-block-start: 0;
		padding: 1rem;
		background-color: var(--background-norm);
		box-shadow: var(--shadow-norm);
		z-index: 1;

		&-no-result {
			color: var(--text-weak);
			padding-block: rem(40);
			padding-inline: rem(10);
			letter-spacing: rem(0.25);
		}
	}

	&--is-searchable {
		.dropdown-content::before {
			content: none;
		}
	}
}
