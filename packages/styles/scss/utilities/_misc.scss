.row--orderable {
	z-index: $layer-modals;

	/* In case the modal is open */
	background: var(--background-norm);
	color: var(--text-norm);
}

/*
 * Welcome boxes in a 2 column design
 * Make breakpoint overable
 */
$breakpoint-2-columns: 1180 !default;

@include media('<=#{em($breakpoint-2-columns, 16)}') {
	.boxes-placeholder-container {
		flex-direction: column;

		& > * {
			margin-block-end: 1em;
			inline-size: 100%;
			flex-basis: auto;
		}
	}

	.boxes-placeholder-button {
		margin-block-start: 0;
	}
}

.qr-code {
	border: 1px solid white;
}

.unstyled {
	padding-inline-start: 0;
	list-style-type: none;
}

.list-columns {
	column-count: 1;
	column-gap: 0;

	& > *,
	&-no-break {
		-webkit-column-break-inside: avoid; // Chrome, Safari, Opera
		page-break-inside: avoid; // Firefox
		break-inside: avoid; // IE 10+
		break-inside: avoid-column; // W3C
	}
}

@include responsive-classes(
	(
		column-1: (
			column-count: 1,
		),

		column-2: (
			column-count: 2,
		),
	)
);

/* hardware-acceleration activation */
.hardware-accelerated {
	@include vendor-prefix(transform, translateZ(0));
}

/* to hide text with accessibilityâ€¦ a11y */
.invisible,
.sr-only {
	border: 0;
	clip: rect(0 0 0 0);
	block-size: 1px;
	margin: -1px;
	overflow: hidden;
	padding: 0;
	position: absolute;
	inline-size: 1px;
	inset-block-start: 0; // needed for Safari dumb and ðŸ’© behaviour
}

.visibility-hidden {
	visibility: hidden;
}

.filter-blur {
	filter: blur(4px);
}

/* RTL/others */
.mirror,
[dir='rtl'] .on-rtl-mirror {
	transform: rotateY(180deg);
}

.rotateX-180 {
	transform: rotateX(180deg);
}

.rotateZ-90 {
	transform: rotateZ(90deg);
}

.rotateZ-270 {
	transform: rotateZ(270deg);
}

/* increase surface click/tap */
.increase-click-surface::before {
	content: '';
	position: absolute;
	inset: 0;
}

.no-pointer-events,
.no-pointer-events-children * {
	pointer-events: none;
}
