/**
 * Generate margin classes from coordinates and amounts
 * @param {List} $list-margin - List of coordinates for generation, i.e. 'mt, mr, mb, ml, m'
 * @param {List} $list-margin-values - List of value for generation, i.e. '0, 1, 2, 3'
 * @param {String} $prefix - Specify a prefix for each class if needed
 * @returns {String} - CSS classes with correct names from coordinates and values
 */
@mixin margin-generator($list-margin, $list-margin-values, $prefix: '') {
	@each $margin-type in $list-margin {
		@each $margin in $list-margin-values {
			//$temp_m : str-slice($margin-type, 0, 1);
			$temp_t: str-slice($margin-type, 2, 3);

			$property: margin;

			@if $temp_t==t {
				$property: margin-block-start;
			} @else if $temp_t==r {
				$property: margin-inline-end;
			} @else if $temp_t==b {
				$property: margin-block-end;
			} @else if $temp_t==l {
				$property: margin-inline-start;
			} @else if $temp_t==x {
				$property: margin-inline;
			} @else if $temp_t==y {
				$property: margin-block;
			}

			$value: $margin + 0em;

			@if $margin==0 {
				$value: $margin;
			}

			// convert to string
			$text-margin: $margin + '';

			// from 1.5 to 1-5
			$property-class: str-replace($text-margin, '.', '-');

			// .mr1-5 { margin-inline-end: 1.5em; }
			.#{$prefix}#{$margin-type}#{$property-class} {
				#{$property}: #{$value};
			}
		}
	}
}
