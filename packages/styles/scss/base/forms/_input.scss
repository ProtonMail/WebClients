$inputform-default-spacing-text: rem(4) !default;
$inputform-height-phone-prefix: rem(28) !default;

// fix for standard select component
select {
	padding: 0; // for Firefox difference
	option {
		background-color: var(--field-background-color);
	}
}

.inputform {
	&-container {
		@extend .field-container;
	}

	&-label {
		padding-block-end: $inputform-default-spacing-text;
	}

	&-label-hint,
	&-assist {
		font-size: rem(12);
		color: var(--text-weak);
	}

	&-label-hint {
		padding-block-end: rem(1); // just to compensate the difference of text size
	}

	&-assist {
		min-block-size: 1.9em;
		padding-block-start: $inputform-default-spacing-text;
	}

	&-label-text {
		font-weight: var(--font-weight-semibold);
	}

	&-adornment {
		color: var(--text-weak);
	}

	@at-root input#{&}-field {
		block-size: rem($default-height-fields-inputforms);
		min-block-size: rem(
			$default-height-fields-inputforms
		); // To ensure minimum size when overriding block-size to 'auto'
	}

	&-field {
		padding-block: em(7); // 36px height, same as buttons
		padding-inline: em(16);
		border-radius: var(--border-radius-md);
		border: 1px solid var(--field-norm);
		background-color: var(--field-background-color);
		color: var(--field-text-color);
		outline: none;
		filter: none; // fixes Firefox autofill color
		transition: 0.15s easing(easeOutQuint), background-position 0s;

		&.error {
			border-color: var(--signal-danger);
		}

		&:hover,
		&.hover {
			border-color: var(--field-hover);
			background-color: var(--field-hover-background-color);
			color: var(--field-hover-text-color);
		}

		&:focus,
		&.focus,
		&:focus-within {
			border-color: var(--field-focus);
			box-shadow: 0 0 0 #{$fields-focus-ring-size} var(--field-highlight);
			background-color: var(--field-focus-background-color);
			color: var(--field-focus-text-color);
		}

		&:-moz-ui-invalid {
			// fixes some Firefox issues with HTML5 validation
			box-shadow: none;
		}

		&[type='search'] {
			padding-inline-start: 2em;

			&::-webkit-search-cancel-button {
				display: none;
			}
		}

		select#{&} {
			background-size: rem(15);
			padding-inline-end: rem(20);
			text-overflow: ellipsis;
			overflow: hidden;
			cursor: pointer;

			&::-ms-expand {
				display: none;
			}

			& > optgroup {
				background-color: var(--background-weak);
			}
		}
	}

	& &-prefix-phone {
		block-size: $inputform-height-phone-prefix; // no variation for bigger - select of content needs to be "fixed"
	}

	// global error state on container
	&-container--invalid {
		.inputform {
			&-label-text,
			&-assist {
				color: var(--signal-danger);
				font-weight: var(--font-weight-semibold);
			}

			&-field {
				border-color: var(--signal-danger);
			}
		}
		.select {
			border-color: var(--signal-danger);
		}
	}

	// global warning state on container
	&-container--warning {
		.inputform {
			&-label-text,
			&-assist {
				color: var(--signal-warning);
				font-weight: var(--font-weight-semibold);
			}
		}
	}

	&-adornment-container {
		@extend .inputform-field; // added focus-within inside on inputform-field for this fake-field :)
		padding: 0;
		block-size: rem($default-height-fields-inputforms);
		min-block-size: rem(
			$default-height-fields-inputforms
		); // To ensure minimum size when overriding block-size to 'auto'

		// make sure input inside does not go over its container
		input.inputform-field {
			block-size: 100%;
			min-block-size: initial;
			background-color: transparent;
		}

		.inputform-field {
			&,
			&:focus {
				border: 0;
				outline: 0;
			}
		}

		&-empty {
			// for drive, to keep the same height when not displayed (avoid shifts when appearing)
			min-block-size: calc(#{rem($default-height-fields-inputforms)} + 2px);
			.inputform-container {
				margin-block: auto;
			}
			.inputform-field.inputform-field {
				block-size: auto;
				/* autoprefixer: ignore next */
				/* stylelint-disable-next-line */
				max-inline-size: -webkit-fill-available; // For a crazy bug from Chrome
			}
		}

		&:focus-within {
			.inputform-field {
				background-color: transparent;
				box-shadow: none;
				outline: 0;
				border: 0;
			}
		}
	}
	&-adornment-container--prefix {
		@extend .inputform-adornment-container;

		.inputform-field {
			padding-inline-start: 0.5em;
		}
	}
	&-adornment-container--suffix {
		@extend .inputform-adornment-container;

		.inputform-field {
			padding-inline-end: 0.5em;
		}
	}

	// bigger inputs
	&-container--bigger {
		input.inputform-field,
		.select,
		.inputform-adornment-container {
			block-size: rem($bigger-height-fields-inputforms);
		}

		input.inputform-field {
			&[type='search'] {
				background-size: rem(20);
				padding-inline-start: 2.2em;
			}
		}

		.inputform-adornment-container {
			&-empty {
				// for drive, to keep the same height
				min-block-size: calc(#{rem($bigger-height-fields-inputforms)} + 2px);
			}

			.inputform-field {
				block-size: 100%;
			}
		}
	}

	// disabled input
	&-container--disabled {
		&,
		& .inputform-field,
		& .inputform-label-hint,
		& .inputform-assist,
		& .inputform-adornment {
			color: var(--field-disabled-text-color);
			cursor: auto;
		}

		& .inputform-label {
			cursor: auto;
		}

		& .inputform-field {
			&:hover,
			&.hover {
				border-color: var(--field-disabled);
				background-color: var(--field-disabled-background-color);
			}
		}
	}

	&-container--dense {
		.inputform-assist:empty {
			min-block-size: 0;
			padding-block-start: 0;
		}
	}
}
