.bordered {
	border: 1px solid var(--border-norm);
}

.bordered--dashed {
	border: 1px dashed var(--border-norm);
}

.border--danger {
	border-color: var(--signal-danger);
}

.border--primary {
	border-color: var(--primary);
}

.border--currentColor {
	border: 1px solid currentColor;
}

@each $placement in (top, right, bottom, left) {
	.border-#{$placement} {
		border-#{placement-to-logical($placement)}: 1px solid var(--border-norm);

		&--weak {
			border-#{placement-to-logical($placement)}: 1px solid var(--border-weak);
		}

		&--dashed {
			border-#{placement-to-logical($placement)}-style: dashed;
		}

		&--currentColor {
			border-#{placement-to-logical($placement)}-color: currentColor;
		}
	}
}

.border-bottom-children {
	> * {
		border-block-end: 1px solid var(--border-norm);
	}
	&--not-last {
		& > :last-child {
			border-block-end: 0;
		}
	}
}

.border-none {
	border: none;
}

.border-collapse {
	border-collapse: collapse;
}

.shadow-norm {
	box-shadow: var(--shadow-norm);
}

.shadow-lifted {
	box-shadow: var(--shadow-lifted);
}

.rounded-sm {
	border-radius: var(--border-radius-sm);
}

.rounded {
	border-radius: var(--border-radius-md);
}

.rounded-lg {
	border-radius: var(--border-radius-lg);
}

.rounded-xl {
	border-radius: var(--border-radius-xl);
}

.rounded-full {
	border-radius: var(--border-radius-full);
}

.rounded-50 {
	border-radius: 50%;
}

.rounded-none {
	border-radius: 0;
}
