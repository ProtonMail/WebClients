.bordered {
	border: 1px solid var(--border-norm);
}

.bordered--dashed {
	border: 1px dashed var(--border-norm);
}

.border--danger {
	border-color: var(--signal-danger);
}

.border--currentColor {
	border: 1px solid currentColor;
}

@each $placement in (top, right, bottom, left) {
	.border-#{$placement} {
		border-#{placement-to-logical($placement)}: 1px solid var(--border-norm);

		&--weak {
			border-#{placement-to-logical($placement)}: 1px solid var(--border-weak);
		}

		&--dashed {
			border-#{placement-to-logical($placement)}-style: dashed;
		}

		&--currentColor {
			border-#{placement-to-logical($placement)}-color: currentColor;
		}
	}
}

.border-bottom-children {
	> * {
		border-block-end: 1px solid var(--border-norm);
	}
	&--not-last {
		& > :last-child {
			border-block-end: 0;
		}
	}
}

.border-none {
	border: none;
}

.shadow-norm {
	box-shadow: var(--shadow-norm);
}

.shadow-lifted {
	box-shadow: var(--shadow-lifted);
}

.row--orderable {
	z-index: 666;
	/* In case the modal is open */
	background: var(--background-norm);
	color: var(--text-norm);
}

/*
 * Welcome boxes in a 2 column design
 * Make breakpoint overable
 */
$breakpoint-2-columns: 1180 !default;

@include respond-to($breakpoint-2-columns) {
	.boxes-placeholder-container {
		flex-direction: column;

		& > * {
			margin-block-end: 1em;
			inline-size: 100%;
			flex-basis: auto;
		}
	}

	.boxes-placeholder-button {
		margin-block-start: 0;
	}
}

.rounded {
	border-radius: var(--border-radius-medium);
}

.rounded-bigger {
	border-radius: var(--border-radius-large);
}

.rounded-xl {
	border-radius: var(--border-radius-xl);
}

.rounded50 {
	border-radius: 50%;
}

.rounded1e {
	border-radius: 1em;
}

.rounded0 {
	border-radius: 0;
}

.rounded0-left {
	border-start-start-radius: 0;
	border-end-start-radius: 0;
}

.rounded0-right {
	border-start-end-radius: 0;
	border-end-end-radius: 0;
}
