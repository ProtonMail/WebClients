diff --git i/packages/drive-store/store/_api/usePublicAuth.ts w/packages/drive-store/store/_api/usePublicAuth.ts
index 4282c67069..6f72989426 100644
--- i/packages/drive-store/store/_api/usePublicAuth.ts
+++ w/packages/drive-store/store/_api/usePublicAuth.ts
@@ -4,6 +4,7 @@ import { c } from 'ttag';
 
 import { useNotifications } from '@proton/components';
 import { getApiError } from '@proton/shared/lib/api/helpers/apiErrorHelper';
+import type { ResumedSessionResult } from '@proton/shared/lib/authentication/persistedSessionHelper';
 import { API_CODES, HTTP_STATUS_CODE } from '@proton/shared/lib/constants';
 import { HandshakeInfoVendorType } from '@proton/shared/lib/interfaces/drive/sharing';
 
@@ -19,7 +20,12 @@ import { ERROR_CODE_INVALID_SRP_PARAMS, default as usePublicSession } from './us
  *
  * @param client - whether the consumer of this hook is the drive client or docs client
  */
-export default function usePublicAuth(token: string, urlPassword: string, client: 'drive' | 'docs') {
+export default function usePublicAuth(
+    token: string,
+    urlPassword: string,
+    client: 'drive' | 'docs',
+    session?: ResumedSessionResult
+) {
     const { createNotification } = useNotifications();
     const { openDocumentWindow } = useOpenDocument();
 
@@ -71,7 +77,7 @@ export default function usePublicAuth(token: string, urlPassword: string, client
             return;
         }
         setIsLoading(true);
-        initHandshake(token)
+        initHandshake(token, session)
             .then(({ handshakeInfo, isLegacySharedUrl, hasCustomPassword }) => {
                 const vendorType = handshakeInfo.VendorType;
                 if (vendorType !== HandshakeInfoVendorType.ProtonDrive && client === 'drive') {
