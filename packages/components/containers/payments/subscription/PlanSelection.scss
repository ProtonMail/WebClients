@import '~@proton/styles/scss/config';

/*
 * cycle selector
*/
@include respond-to(1100) {
	.cycle-currency-selectors {
		&.flex-nowrap {
			flex-wrap: wrap;
			> .flex-item-fluid {
				min-inline-size: 100%;
				margin-inline-start: 0;
				margin-block-end: 0.25em;
			}
		}
	}
}

.plan-selection {
	display: grid;
	grid-gap: 1em;
	grid-template-columns: repeat(var(--plan-selection-number, 4), 1fr);
	& &-plan {
		// specificity ^^
		border-radius: var(--border-radius-lg);
	}
	// dirty, but to avoid inserting content in tabs
	&-currency-selector {
		margin-block-end: -2.5em;
	}

	.plan-selection {
		&-plan-recommended {
			border-color: var(--primary);
			&-pill {
				&-container {
					position: absolute;
					inset-block-end: calc(100% - 1em);
					inset-inline: 0;
				}

				border-radius: 5em;
			}
		}

		&-title {
			.select {
				border: 0;
				padding: 0;
				display: inline-block;
				text-align: start;
				block-size: auto;
				background: transparent;
				svg {
					inline-size: rem(16);
					block-size: rem(16);
				}
			}
		}

		&-logos {
			min-block-size: rem(60);
			display: inline-grid;
			gap: 0.25em;
			grid-template-columns: repeat(4, 52px);
			@include respond-to(1230) {
				grid-template-columns: repeat(2, 52px);
				min-block-size: rem(120);
			}
			@include respond-to($breakpoint-small) {
				min-block-size: 0;
				&:empty {
					margin: 0;
				}
			}
		}
		&-product-logo {
			border-radius: var(--border-radius-lg);
		}

		&-info {
			min-block-size: 4em;
			@include respond-to(1290) {
				min-block-size: 6em;
			}
			@include respond-to(1000) {
				min-block-size: 9em;
			}
			@include respond-to($breakpoint-medium) {
				min-block-size: 6em;
			}
			@include respond-to($breakpoint-small) {
				min-block-size: 0;
			}
		}

		&-main-price {
			.amount,
			.currency {
				font-size: em(48);
				@include respond-to(1000) {
					font-size: 1.8em;
				}
				@include respond-to(950) {
					font-size: 1.6em;
				}
				@include respond-to($breakpoint-medium) {
					font-size: 2em;
				}
				line-height: 1.2; // font only takes the place for characters ^^
			}
			.suffix {
				color: var(--text-weak);
			}
		}
	}
	@include respond-to($breakpoint-medium) {
		grid-template-columns: repeat(2, 1fr);
		grid-gap: 2.2em 1em;
	}
	@include respond-to($breakpoint-small) {
		grid-template-columns: repeat(1, 1fr);
	}

	// special case for b2b
	&--b2b &-info {
		min-block-size: 6em;
		@include respond-to(1250) {
			min-block-size: 7.5em;
		}
		@include respond-to(1110) {
			min-block-size: 8em;
		}
		@include respond-to(960) {
			min-block-size: 10em;
		}
		@include respond-to($breakpoint-small) {
			min-block-size: 0;
		}
	}
}

.subscriptionCheckout {
	&-column {
		inline-size: 22em;

		@include respond-to($breakpoint-medium) {
			inline-size: 18em;
		}
		@include respond-to($breakpoint-small) {
			inline-size: 100%;
		}

		.subscriptionCheckout-currencySelect {
			.select {
				border: 0;
				padding: 0;
				display: inline-block;
				text-align: end;
				block-size: auto;
				background: transparent;
				color: var(--interaction-norm);

				&:hover,
				&:focus {
					color: var(--interaction-norm-hover);
				}

				&:active {
					color: var(--interaction-norm-active);
				}
			}
		}
	}
}

.plan-customiser {
	& &-addon-label {
		@include respond-to($breakpoint-medium) {
			min-inline-size: 8em;
		}
	}
}
