@import '~@proton/styles/scss/config';

/*
 * cycle selector
*/
@include respond-to(1100) {
	.cycle-currency-selectors {
		&.flex-nowrap {
			flex-wrap: wrap;
			> .flex-item-fluid {
				min-inline-size: 100%;
				margin-inline-start: 0;
				margin-block-end: 0.25em;
			}
		}
	}
}

.plan-selection {
	display: grid;
	grid-gap: 1em;
	grid-template-columns: repeat(var(--plan-selection-number, 4), 1fr);
	& &-plan {
		// specificity ^^
		border-radius: var(--border-radius-lg);
	}

	.plan-selection {
		&-plan-current {
			background-color: var(--primary);
			color: var(--primary-contrast);
			position: absolute;
			inset-block-end: 100%;
			inset-inline: -1px;
			border-start-start-radius: var(--border-radius-lg);
			border-start-end-radius: var(--border-radius-lg);
			border-end-end-radius: 0;
			border-end-start-radius: 0;
			padding: 0.35em; // Design wants 28px height ^^
			&-card {
				border-color: var(--primary);
				border-radius: 0 0 var(--border-radius-lg) var(--border-radius-lg);
				border-start-start-radius: 0;
				border-start-end-radius: 0;
				border-end-end-radius: var(--border-radius-lg);
				border-end-start-radius: var(--border-radius-lg);
			}
		}

		&-info {
			min-block-size: 4em;
			@include respond-to(1100) {
				min-block-size: 5.5em;
			}
			@include respond-to(1000) {
				min-block-size: 6.5em;
			}
			@include respond-to($breakpoint-medium) {
				min-block-size: 0;
			}
		}

		&-main-price {
			.amount,
			.currency {
				font-size: 2em;
				@include respond-to(1000) {
					font-size: 1.8em;
				}
				@include respond-to(950) {
					font-size: 1.6em;
				}
				@include respond-to($breakpoint-medium) {
					font-size: 2em;
				}
				line-height: 1.2; // font only takes the place for characters ^^
			}
			.suffix {
				opacity: 0.5; // while waiting for new taxonomy
			}
		}
	}
	@include respond-to($breakpoint-medium) {
		grid-template-columns: repeat(2, 1fr);
		grid-gap: 2.2em 1em;
	}
	@include respond-to($breakpoint-small) {
		grid-template-columns: repeat(1, 1fr);
	}
}

.subscriptionCheckout-column {
	inline-size: 22em;
	@include respond-to($breakpoint-medium) {
		inline-size: 18em;
	}
	@include respond-to($breakpoint-small) {
		inline-size: 100%;
	}
}

.plan-customiser {
	& &-addon-label {
		@include respond-to($breakpoint-medium) {
			min-inline-size: 8em;
		}
	}
}
