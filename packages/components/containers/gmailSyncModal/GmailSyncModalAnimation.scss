@use 'sass:map';
@use 'sass:math';
@import '~@proton/styles/scss/lib';

.gsma {
	$keyframes: (
		initial_pause: 0.5,
		envelope: 0.5,
		inbox: 0.75,
		inbox_pause: 0.25,
		new-mail: 0.5,
		new-mail_pause: 1,
		forwarded: 0.75,
		forwarded_pause: 0.5,
		received: 0.6,
		received_pause: 0.5,
		trackers: 0.6,
		trackers_pause: 0.5,
		encrypted: 0.6,
		encrypted_pause: 0.5,
	);

	@function duration($key) {
		@return map.get($keyframes, $key) * 1s;
	}

	@function delay($key) {
		$value: 0;
		@each $k, $v in $keyframes {
			$value: $value + $v;
			@if $k == $key {
				@return $value * 1s;
			}
		}
	}

	position: relative;
	padding: 1.5rem;
	overflow: hidden;
	border-radius: var(--border-radius-lg);
	font-size: em(18);
	line-height: 1.2;
	pointer-events: none;

	&::before {
		content: '';
		position: absolute;
		inset: 0;
		z-index: -1;
		background-image: linear-gradient(to bottom, var(--interaction-norm-minor-2), var(--interaction-norm));
		opacity: 0.22;
	}

	&-gmail-username-inbox {
		position: relative;
		z-index: 1;
		display: inline-flex;
		max-inline-size: 100%;
		margin-block-end: 1.5rem;
		flex-flow: row nowrap;
		align-items: stretch;
	}

	&-gmail-logo {
		position: relative;
		z-index: 1;
		display: inline-flex;
		inline-size: rem(56);
		block-size: rem(56);
		padding: 0.5rem;
		flex: 0 0 auto;
		border-radius: var(--border-radius-lg);
		box-shadow: var(--shadow-lifted);
		background-color: var(--background-norm);
		animation: duration(envelope) easing(ease-out-quart) delay(initial_pause) both anime-gsma-gmail-logo;

		@keyframes anime-gsma-gmail-logo {
			from {
				scale: 0;
				opacity: 0;
			}

			to {
				scale: 1;
				opacity: 1;
			}
		}

		img {
			inline-size: rem(40);
			block-size: rem(30);
			margin: auto;
		}
	}

	&-username {
		position: relative;
		display: flex;
		max-inline-size: calc(100% - #{rem(56)});
		padding-inline: 1rem;
		justify-content: center;
		align-items: center;
		animation: duration(inbox) easing(ease-out-back) delay(envelope) both anime-gsma-username;

		@keyframes anime-gsma-username {
			from {
				translate: -1rem 0;
				opacity: 0;
			}

			to {
				translate: 0 0;
				opacity: 1;
			}
		}

		&::before {
			content: '';
			position: absolute;
			inset-inline: #{rem(56) * -1} 0;
			inset-block: 0;
			transform-origin: center right;
			z-index: -1;
			border-radius: var(--border-radius-lg) var(--border-radius-md) var(--border-radius-md) var(--border-radius-lg);
			box-shadow: var(--shadow-norm);
			background-color: var(--background-norm);
			animation: duration(inbox) easing(ease-out-back) delay(envelope) both anime-gsma-username-background;

			@keyframes anime-gsma-username-background {
				from {
					scale: 0.8 1;
					opacity: 0;
				}

				to {
					scale: 1;
					opacity: 1;
				}
			}
		}

		&-content {
			overflow: hidden;
			text-overflow: ellipsis;
		}
	}

	&-auto-forward {
		position: relative;
		z-index: 1;
		display: flex;
		min-block-size: rem(35);
		margin-block-end: 1.5rem;
		flex-flow: row nowrap;
		align-items: stretch;
		gap: 1rem;
		animation: duration(new-mail) easing(ease-out-back) delay(inbox_pause) both anime-gsma-auto-forward;

		@keyframes anime-gsma-auto-forward {
			from {
				translate: 0 -1rem;
				opacity: 0;
			}

			to {
				translate: 0 0;
				opacity: 1;
			}
		}
	}

	&-envelope {
		position: relative;
		z-index: 1;
		flex: 0 0 auto;
		animation: duration(forwarded) easing(ease-out-quad) delay(new-mail_pause) both anime-gsma-envelope;

		@keyframes anime-gsma-envelope {
			from {
				inset-inline-start: 0;
			}

			to {
				inset-inline-start: calc(100% - #{rem(55)});
			}
		}

		img {
			inline-size: rem(55);
			block-size: rem(35);
			box-shadow: var(--shadow-norm);
			animation: duration(forwarded) easing(ease-in-quart) delay(new-mail_pause) both anime-gsma-envelope-img;

			@keyframes anime-gsma-envelope-img {
				from {
					translate: 0 0;
					scale: 1;
					rotate: 0deg;
					opacity: 1;
				}

				to {
					translate: 0 4rem;
					scale: 0.5;
					rotate: 70deg;
					opacity: 0;
				}
			}
		}

		&::before {
			content: '1';
			position: absolute;
			inset-block-start: -0.75rem;
			inset-inline-end: -0.75rem;
			z-index: 2;
			display: flex;
			block-size: 1.5rem;
			inline-size: 1.5rem;
			justify-content: center;
			align-items: center;
			border-radius: 50%;
			background-color: var(--signal-danger);
			color: var(--signal-danger-contrast);
			font-weight: bold;
			animation: duration(forwarded) easing(ease-in-cubic) delay(new-mail_pause) both anime-gsma-envelope-count;

			@keyframes anime-gsma-envelope-count {
				from {
					inset-block-start: -0.75rem;
				}

				to {
					inset-block-start: calc(100% + 0.75rem);
				}
			}
		}
	}

	&-new-email {
		position: relative;
		display: flex;
		padding-block: 0.5rem;
		padding-inline: 1rem;
		justify-content: center;
		align-items: center;
		border-radius: var(--border-radius-md);
		box-shadow: var(--shadow-norm);
		background-color: var(--background-norm);
		animation: duration(forwarded) easing(ease-out-quad) delay(new-mail_pause) both anime-gsma-new-email;

		@keyframes anime-gsma-new-email {
			from {
				inset-inline-start: 0;
				opacity: 1;
			}

			50% {
				opacity: 0;
			}

			to {
				inset-inline-start: calc(100% - 4.5rem);
				opacity: 0;
			}
		}
	}

	&-forwarded {
		position: absolute;
		inset-block-start: 0;
		inset-inline-start: 0;
		z-index: 1;
		display: flex;
		padding-block: 0.5rem;
		padding-inline: 1rem;
		justify-content: center;
		align-items: center;
		border-radius: var(--border-radius-md);
		box-shadow: var(--shadow-norm);
		background-color: var(--background-norm);
		animation: duration(forwarded) easing(ease-out-cubic) delay(new-mail_pause) both anime-gsma-forwarded;

		@keyframes anime-gsma-forwarded {
			from {
				translate: calc(-100% - 2rem) 0;
				opacity: 0;
			}

			to {
				translate: 0 0;
				opacity: 1;
			}
		}
	}

	&-proton {
		display: flex;
		inline-size: rem(56);
		block-size: rem(56);
		padding: 0.25rem;
		margin-block-end: 1.5rem;
		margin-inline-start: auto;
		aspect-ratio: 1;
		border-radius: var(--border-radius-lg);
		box-shadow: var(--shadow-lifted);
		background-color: var(--background-norm);
		animation: duration(forwarded) easing(ease-out-quint) delay(new-mail_pause) both anime-gsma-proton;

		@keyframes anime-gsma-proton {
			from {
				scale: 0;
				opacity: 0;
			}

			to {
				scale: 1;
				opacity: 1;
			}
		}

		&-logo {
			margin: auto;
		}
	}

	&-received,
	&-trackers,
	&-encrypted {
		display: flex;
		margin-block-end: 1.5rem;
		flex-flow: row nowrap;
		justify-content: flex-end;
		align-items: center;

		&-inner {
			display: flex;
			min-block-size: rem(50);
			padding-block: 0.5rem;
			padding-inline: 1rem;
			flex-flow: row nowrap;
			justify-content: stretch;
			border-radius: var(--border-radius-md);
			box-shadow: var(--shadow-norm);
			animation: anime-gsma-rte-inner easing(ease-out-cubic) both;

			@keyframes anime-gsma-rte-inner {
				from {
					translate: 0 -1.5rem;
					opacity: 0;
				}

				to {
					translate: 0 0;
					opacity: 1;
				}
			}

			&-content {
				display: flex;
				flex-flow: row nowrap;
				justify-content: flex-start;
				align-items: center;
				animation: anime-gsma-rte-inner-content easing(ease-out-cubic) both;
				animation-duration: inherit;
				animation-delay: inherit;

				@keyframes anime-gsma-rte-inner-content {
					from {
						translate: 0 -2.5rem;
						opacity: 0;
					}

					to {
						translate: 0 0;
						opacity: 1;
					}
				}
			}
		}

		img {
			margin-inline-end: 0.5rem;
			flex: 0 0 auto;
			animation: anime-gsma-icon-rotate easing(ease-out-cubic) both;
			animation-duration: inherit;
			animation-delay: inherit;

			@keyframes anime-gsma-icon-rotate {
				from {
					rotate: 0deg;
					scale: 0;
					opacity: 0;
				}

				to {
					rotate: 360deg;
					scale: 1;
					opacity: 1;
				}
			}
		}
	}

	&-received {
		&-inner {
			animation-duration: duration(received);
			animation-delay: delay(forwarded_pause);
		}
	}

	&-trackers {
		&-inner {
			animation-duration: duration(trackers);
			animation-delay: delay(received_pause);
		}

		img {
			animation-duration: duration(trackers);
			animation-delay: #{delay(received_pause) + math.div(duration(trackers), 2)};
		}
	}

	&-encrypted {
		margin-block-end: 0;

		&-inner {
			animation-duration: duration(encrypted);
			animation-delay: delay(trackers_pause);
		}

		img {
			animation-duration: duration(encrypted);
			animation-delay: #{delay(trackers_pause) + math.div(duration(encrypted), 2)};
		}
	}

	// Class override only for reduce mode where everything is smaller
	&.gsma--reduced-height {
		font-size: em(14);
		line-height: 1;
		font-weight: 500;

		.gsma-gmail-username-inbox {
			margin-block-end: 1rem;
		}

		.gsma-auto-forward {
			margin-block-end: 0;
		}

		.gsma-encrypted {
			margin-block-end: 0;
		}

		.gsma-proton,
		.gsma-received,
		.gsma-trackers {
			margin-block-end: 0.75rem;
		}

		.gsma-proton,
		.gsma-received,
		.gsma-trackers,
		.gsma-encrypted {
			&-inner {
				min-block-size: rem(30);
				padding-inline: 0.75rem;
				padding-block: 0.375rem;
			}

			img {
				inline-size: rem(20);
				block-size: rem(20);
			}
		}

		.gsma-envelope {
			&::before {
				animation: duration(forwarded) easing(ease-in-cubic) delay(new-mail_pause) both
					anime-gsma-envelope-count-reduced;

				@keyframes anime-gsma-envelope-count-reduced {
					from {
						inset-block-start: -0.75rem;
					}

					to {
						inset-block-start: 1.5rem;
					}
				}
			}
		}

		@include media('<=small') {
			padding: 1rem;

			.gsma-gmail-username-inbox {
				.gsma-username {
					max-inline-size: calc(100% - #{rem(40)});

					&::before {
						inset-inline: #{rem(40) * -1} 0;
					}
				}

				margin-block-end: 0.75rem;
			}

			.gsma-envelope {
				margin-block-start: 0.375rem;
				animation: duration(forwarded) easing(ease-out-quad) delay(new-mail_pause) both anime-gsma-envelope-small;

				@keyframes anime-gsma-envelope-small {
					from {
						inset-inline-start: 0;
					}

					to {
						inset-inline-start: calc(100% - #{rem(48)});
					}
				}

				img {
					inline-size: rem(45);
					block-size: rem(29);
				}

				&::before {
					inset-block-start: -0.5rem;
					inset-inline-end: -0.5rem;
					block-size: 1rem;
					inline-size: 1rem;
					animation: duration(forwarded) easing(ease-in-cubic) delay(new-mail_pause) both
						anime-gsma-envelope-count-reduced-small;

					@keyframes anime-gsma-envelope-count-reduced-small {
						from {
							inset-block-start: -0.75rem;
						}

						to {
							inset-block-start: 1.375rem;
						}
					}
				}
			}

			.gsma-gmail-logo,
			.gsma-proton {
				inline-size: rem(40);
				block-size: rem(40);
				padding: 0.375rem;
			}

			.gsma-proton,
			.gsma-received,
			.gsma-trackers {
				margin-block-end: 0.5rem;
			}

			.gsma-proton,
			.gsma-received,
			.gsma-trackers,
			.gsma-encrypted {
				&-inner {
					min-block-size: rem(28);
					padding-inline: 0.5rem;
					padding-block: 0.25rem;
				}

				img {
					inline-size: rem(16);
					block-size: rem(16);
				}
			}
		}
	}
}
