@import '~@proton/styles/scss/lib';

.tooltip {
	$tooltip-width: 14.5em;
	$arrow-width: 0.5em;

	position: fixed;
	z-index: $layer-tooltips;
	min-inline-size: $arrow-width;
	max-inline-size: $tooltip-width;
	scale: 1.001; // To avoid text jittering
	border-radius: var(--border-radius-md);
	background-color: var(--tooltip-background-color);
	color: var(--tooltip-text-color);
	padding-block: 0.5em;
	padding-inline: 0.75em;
	text-align: center;
	word-break: break-word;
	animation-fill-mode: both;

	&-in-first {
		animation: anime-tooltip-in-first 0.2s easing(ease-out-quart);

		@keyframes anime-tooltip-in-first {
			from {
				scale: 0.9;
				opacity: 0;
			}

			to {
				scale: 1.001; // To avoid text jittering
				opacity: 1;
			}
		}
	}

	&-in {
		animation: anime-tooltip-in 0.15s easing(ease-in-quad);

		@keyframes anime-tooltip-in {
			from {
				opacity: 0;
			}

			to {
				opacity: 1;
			}
		}
	}

	&-out {
		animation: anime-tooltip-out 0.15s easing(ease-out-quad);

		@keyframes anime-tooltip-out {
			from {
				opacity: 1;
			}

			to {
				opacity: 0;
			}
		}
	}

	&-out-last {
		animation: anime-tooltip-out-last 0.35s easing(ease-in-expo);

		@keyframes anime-tooltip-out-last {
			from {
				scale: 1.001; // To avoid text jittering
				opacity: 1;
			}

			to {
				scale: 0.9;
				opacity: 0;
			}
		}
	}

	// colored versions
	@each $color in (primary, danger, warning, success, info) {
		$prefix: if($color != 'primary', 'signal-', '');

		&-#{$color} {
			--tooltip-background-color: var(--#{$prefix + $color});
			--tooltip-text-color: var(--#{$prefix + $color}-contrast);
		}
	}

	// Placement - no need for logical props - managed by plugins
	/* stylelint-disable */
	&--top-start {
		border-bottom-left-radius: 0;
	}

	&--top-end {
		border-bottom-right-radius: 0;
	}

	&--bottom-start {
		border-top-left-radius: 0;
	}

	&--bottom-end {
		border-top-right-radius: 0;
	}

	&--left-end {
		border-bottom-right-radius: 0;
	}

	&--right-end {
		border-bottom-left-radius: 0;
	}

	&--left-start {
		border-top-right-radius: 0;
	}

	&--right-start {
		border-top-left-radius: 0;
	}

	/* stylelint-enable */

	/* pseudo-element to make arrows */
	&::before {
		content: '';
		speak: none;
		position: absolute;
		z-index: 1;
		inline-size: $arrow-width;
		block-size: $arrow-width;
		pointer-events: none;
		border: $arrow-width solid transparent;
	}

	/* stylelint-disable */
	&--top::before,
	&--top-start::before,
	&--top-end::before {
		top: 100%;
		border-top: $arrow-width solid var(--tooltip-background-color);
	}

	&--bottom::before,
	&--bottom-start::before,
	&--bottom-end::before {
		bottom: 100%;
		border-bottom: $arrow-width solid var(--tooltip-background-color);
	}

	&--right::before,
	&--right-start::before,
	&--right-end::before {
		left: -#{$arrow-width * 2};
		border-right: $arrow-width solid var(--tooltip-background-color);
	}

	&--left::before,
	&--left-start::before,
	&--left-end::before {
		right: -#{$arrow-width * 2};
		border-left: $arrow-width solid var(--tooltip-background-color);
	}

	&--top::before,
	&--bottom::before {
		left: calc(50% - #{$arrow-width});
	}

	&--top-start::before,
	&--bottom-start::before {
		left: max(calc(var(--arrow-offset, 0) - #{$arrow-width}), 0px);
	}

	&--top-end::before,
	&--bottom-end::before {
		right: max(calc(var(--arrow-offset, 0) - #{$arrow-width}), 0px);
	}

	&--left::before,
	&--right::before {
		top: calc(50% - #{$arrow-width});
	}

	&--left-start::before,
	&--right-start::before {
		top: max(calc(var(--arrow-offset, 0) - #{$arrow-width}), 0px);
	}

	&--left-end::before,
	&--right-end::before {
		bottom: max(calc(var(--arrow-offset, 0) - #{$arrow-width}), 0px);
	}
	/* stylelint-enable */

	.kbd {
		position: relative;
		background-color: transparent;
		color: inherit;
		border-color: transparent;

		&::before {
			content: '';
			position: absolute;
			inset: 0;
			background-color: var(--background-strong);
			opacity: 0.2;
			border-radius: var(--border-radius-sm);
		}
	}
}
