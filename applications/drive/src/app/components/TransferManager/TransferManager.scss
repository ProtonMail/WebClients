@import '~@proton/styles/scss/config';

.transfers-manager {
	position: fixed;
	inset-inline-end: 0;
	inset-block-end: 0;
	z-index: 352;
	box-shadow: var(--shadow-lifted);
	color: var(--text-norm);
	transition: 0.15s cubic-bezier(0.22, 1, 0.36, 1);
	background-color: var(--background-norm);

	@include respond-to($breakpoint-tiny, 'height') {
		max-height: 100%;
		height: 100%;
	}

	@include respond-to($breakpoint-small, 'max') {
		inset-inline-start: 0;
		inset-block-end: 0;
	}

	@include respond-to($breakpoint-small, 'min') {
		inline-size: 60%;
		max-inline-size: 50em;
		margin-inline-end: inherit;
	}

	&-heading {
		background: var(--background-strong);
		color: var(--text-norm);

		@include respond-to($breakpoint-small, 'min') {
			border-start-start-radius: var(--border-radius-medium);
			border-start-end-radius: var(--border-radius-medium);
			border-end-start-radius: 0;
			border-end-end-radius: 0;
		}
	}

	&-heading-tooltip {
		align-self: stretch;
		justify-content: stretch;
		align-items: stretch;

		&--isDisabled {
			pointer-events: none;
		}
	}

	&-list {
		background-color: var(--background-norm);
		color: var(--text-norm);
		transition: inherit;
	}

	&--minimized &-list,
	&--minimized &-list-placeholder {
		max-block-size: 0;
		visibility: hidden;
	}

	&--minimized {
		@include respond-to($breakpoint-tiny, 'height') {
			max-height: initial;
			height: initial;
		}
	}

	&-list-item {
		display: grid;
		grid-template-rows: 1fr auto;
		grid-template-areas: 'name size status controls' 'progress progress progress progress';
		column-gap: 1em;
		row-gap: 1em;
		align-items: center;
		block-size: 5em; // To avoid height blinking on status changing
		@extend .border-bottom;

		@include respond-to($breakpoint-small, 'max') {
			grid-template-columns: 4fr minmax(5em, 2fr) 2.5em minmax(4.5em, 1fr);
		}

		@include respond-to($breakpoint-small, 'min') {
			grid-template-columns: 4fr 2.5fr minmax(6em, 2fr) minmax(4.5em, 1fr);
		}

		@include respond-to($breakpoint-tiny, 'min-height') {
			&:last-child {
				border-bottom: none;
			}
		}

		@each $place in (name, size, status, controls, progress) {
			&-#{$place} {
				grid-area: $place;
			}

			@if $place != controls and $place != progress {
				&--canceled &-#{$place} {
					opacity: 0.5;
				}
			}
		}

		&-icon {
			@include respond-to(420, 'max') {
				display: none;
			}
		}

		&-status {
			white-space: nowrap;
			font-variant-numeric: tabular-nums;

			@include respond-to($breakpoint-small, 'max') {
				svg {
					margin: 0;
				}
			}
		}

		&-size {
			white-space: nowrap;
			font-variant-numeric: tabular-nums;
		}

		&-controls-button {
			padding: 0.375em;

			& + & {
				margin-inline-start: 0.5em;
			}
		}
	}

	&-toolbar {
		background-color: var(--background-weak);
	}

	&-list-placeholder {
		background-color: var(--background-norm);
	}

	&-controls {
		display: grid;
		grid-template-columns: minmax(min-content, 1fr) auto;
		grid-template-areas: 'status controls';
		column-gap: 1em;
		align-items: center;
		block-size: 2em;
	}
}
