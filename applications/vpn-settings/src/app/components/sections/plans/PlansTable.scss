@import '~@proton/styles/scss/config';

.pm-plans-table {
	border-collapse: separate;
	border-spacing: 0;

	caption {
		transform: scale(0);
	}

	td,
	th {
		padding: em(16);
		border: 1px solid var(--border-norm);
		border-block-end: 0;
		border-inline-end: 0;

		@include respond-to($breakpoint-medium) {
			padding: em(10);
		}
	}

	th.is-empty {
		border: 0;
	}

	th:not(.simple-table-row-th) {
		text-transform: uppercase;
	}

	tr td:last-child,
	tr th:last-child {
		border-inline-end: 1px solid var(--border-norm);
	}

	thead {
		tr:first-of-type {
			& :nth-child(2) {
				border-start-start-radius: var(--border-radius-md);
			}

			& :last-child {
				border-start-end-radius: var(--border-radius-md);
			}
		}
	}

	tbody {
		tr {
			&:first-of-type .simple-table-row-th {
				border-start-start-radius: var(--border-radius-md);
			}

			&:last-of-type {
				td,
				th {
					border-block-end: 1px solid var(--border-norm);
				}

				& :first-child {
					border-end-start-radius: var(--border-radius-md);
				}

				& :last-child {
					border-end-end-radius: var(--border-radius-md);
				}
			}

			.simple-table-row-th {
				padding-inline-start: 2em;

				@include respond-to(1100) {
					padding: em(10);
				}
			}
		}
	}
}

/* modifiers for highlighting a plan */

/* ADR :
	 - getting type or unit from attr is not supported by any browser => https://developer.mozilla.org/en-US/docs/Web/CSS/attr
	 - CSS custom properties can't be used in selectors => https://css-irl.info/practical-tips-css-variables/
	 - content attribute can't be herited https://stackoverflow.com/questions/7175113/content-attribute-to-inherit-node-value
   */

$border-width: 2px !default;
$nb-plans-max: 4 !default;

@for $i from 1 through $nb-plans-max {
	.pm-table--highlight[data-plan-number='#{$i}'] {
		& tr td:nth-child(#{$i + 1}),
		& tr th:nth-child(#{$i + 1}) {
			border-inline: #{$border-width} solid var(--primary);
		}

		& tr:last-child td:nth-child(#{$i + 1}) {
			border-block-end: #{$border-width} solid var(--primary);
		}

		& tr th:nth-child(#{$i + 1}) {
			border-block-start: #{$border-width} solid var(--primary);
			position: relative;
			color: var(--primary);

			&::before {
				content: attr(data-highlight);
				display: block;
				position: absolute;
				inset-block-end: 100%;
				inset-inline: -#{$border-width};
				background-color: var(--primary);
				color: var(--primary-contrast);
				text-align: center;
				font-weight: var(--font-weight-bold);
				text-transform: uppercase;
				font-size: rem(12);
				padding: 0.25em;
				border-start-start-radius: var(--border-radius-md);
				border-start-end-radius: var(--border-radius-md);
				border-end-start-radius: 0;
				border-end-end-radius: 0;
			}
		}

		& tr td:nth-child(#{$i + 2}),
		& tr th:nth-child(#{$i + 2}) {
			border-inline-start: 0;
		}
	}
}
